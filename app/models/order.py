from flask import current_app as app

# CREATE TABLE Order (
#     purchase_id INT NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
#     cost INT NOT NULL,
#     date_time TIMESTAMP NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
#     fulfillment_status BOOLEAN DEFAULT false 
# );

# Order DAL
class OrderDAL:
    def __init__(self, purchase_id, cost, date_time, fulfillment_status = False):
        self.purchase_id = purchase_id
        self.cost = cost
        self.date_time = date_time
        self.fulfillment_status = fulfillment_status

    @staticmethod
    def get_order(purchase_id):
        rows = app.db.execute('''
        SELECT *
        FROM ORDER
        WHERE purchase_id = :purchase_id''',
        purchase_id=purchase_id)
        return Order(*(rows[0])) if rows is not None else None
    
    @staticmethod
    def get_unfillfilled_orders(purchase_id):
        rows = app.db.execute('''
        SELECT *
        FROM OrderContains
        WHERE purchase_id = :purchase_id AND NOT fulfillment_status
        ''', purchase_id=purchase_id)
        return [Order(*row) for row in rows]

    @staticmethod
    def get_all_orders():
        rows = app.db.execute('''
        SELECT *
        FROM Order
        ''')
        return [Order(*row) for row in rows]